# J.A.R.V.I.S :- Just A Rather Very Intelligent System

import pyttsx3
import datetime
import speech_recognition as sr
import wikipedia
import webbrowser
import os
import requests
import pyjokes
import json
import pywhatkit

engine = pyttsx3.init("sapi5")
voices = engine.getProperty('voices')
print(voices[0].id)
engine.setProperty('voice', voices[0].id)

# Add the function for the device to say something

def speak(audio):
    engine.say(audio)
    engine.runAndWait()

# J.A.R.V.I.S will wish me

def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour >= 0 and hour < 12:
        speak("Good Morning,Ankit")
    elif hour >= 12 and hour < 17:
        speak("Good Afternoon,Ankit")
    else:
        speak("Good Evening,Ankit")

    speak("Hello I am Jarvis. What can I help you today?")

# J.A.R.V.I.S will listen and respond to the user's commands

def takeCommand():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening....")
        r.pause_threshold = 1
        audio = r.listen(source)

    try:
        print("Recognizing....")
        query = r.recognize_google(audio, language='en-in')
        print(f"User said: {query}")

    except Exception as e:
        print(e)
        print("Say that again please")
        speak("Say that again please")
        print("I cant listen anything. Try to use ChatGPT")
        speak("I cant listen anything. Try to use ChatGPT")
        webbrowser.open("chatgpt.com")
        print("You can talk again later if you need help")
        speak("You can talk again later if you need help")
        return "None"
    return query

if __name__ == "__main__":
    wishMe()
    if 1:
        query = takeCommand().lower()

        # Logic for executing tasks based on query
        if 'wikipedia' in query:
            speak('Searching wikipedia....')
            query = query.replace('wikipedia', '  ')
            results = wikipedia.summary(query, sentences=10)
            speak("According to Wikipedia...")
            print(results)
            speak(results)

        elif 'open youtube' in query:
            webbrowser.open('youtube.com')

        elif 'open google' in query:
            webbrowser.open('google.com')

        elif 'play music' in query:
            speak("Which music do you want to listen?")
            r = sr.Recognizer()
            with sr.Microphone() as source:
                print("Listening....")
                r.pause_threshold = 1
                audio = r.listen(source)

            try:
                print("Recognizing....")
                song = r.recognize_google(audio, language = 'en-in')
                print("Playing " + song)
                speak("Playing " + song)
                pywhatkit.playonyt(song)

            except Exception as e:
                print(e)

        elif 'the time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")
            speak(f"Sir, The time is {strTime}")

        elif 'news' in query:
            speak("Which news do you want to know about?")
            r = sr.Recognizer()
            with sr.Microphone() as source:
                print("Listening....")
                r.pause_threshold = 1
                audio = r.listen(source)

            try:
                print("Recognizing....")
                topic = r.recognize_google(audio, language='en-in')
                print(f"User said: {topic}")

                url = f"https://newsapi.org/v2/top-headlines?country=in&category={topic}&apiKey=e93e0a16480b4c99967280280b1719f1"
                r = requests.get(url)
                if r.status_code == 200:
                    data = r.json()

                    articles = data.get("articles", [])

                    for article in articles:
                        print(article.get('title'))
                        speak(article.get('title'))
                        print(article.get('description'))
                        speak(article.get('description'))
            except Exception as e:
                print(e)

        elif 'joke' in query:
            jokes = pyjokes.get_joke()
            print(jokes)
            speak(jokes)

        elif 'weather' in query:
            speak("Which city do you want to know about the weather ?")
            r = sr.Recognizer()
            with sr.Microphone() as source:
                print("Listening....")
                r.pause_threshold = 1
                audio = r.listen(source)

            try:
                print("Recognizing....")
                city = r.recognize_google(audio, language='en-in')
                print(f"User said: {city}")

                url = f"https://api.weatherapi.com/v1/current.json?key=11a2c9f2d2be428a845151929241207&q={city}"
                r = requests.get(url)
                weather = json.loads(r.text)
                temp = weather["current"]["temp_c"]
                wind = weather["current"]["wind_kph"]
                condition = weather["current"]["condition"]["text"]
                print(
                    f"The current temperature in {city} is {temp}Â°C with wind speed of {wind} km/h and condition of {condition}")
                speak(
                    f"The current temperature in {city} is {temp}Â°C with wind speed of {wind} km/h and condition of {condition}")

            except Exception as e:
                print(e)
